#!/bin/bash
set -euo pipefail

# ==================================================================
# ROOT
# ==================================================================

cd ~
mkdir repos

# ==================================================================
# SHELL SCRIPTS
# ==================================================================

echo "Cloning shell scripts"
cd ~/repos
git clone https://github.com/trevordmiller/shell-scripts.git
cd ~

# ==================================================================
# DOTFILES
# ==================================================================

echo "Cloning dotfiles"
cd ~/repos
git clone https://github.com/trevordmiller/dotfiles.git
cd dotfiles
./index
cd ~

# ==================================================================
# PRACTICE PROBLEMS
# ==================================================================

echo "Cloning practice problems"
cd ~/repos
git clone https://github.com/trevordmiller/practice-problems.git
cd ~

# ==================================================================
# PACKAGES
# ==================================================================

echo "Installing Homebrew"
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "Installing global Homebrew packages"
homebrew_packages=(
	"bash"
	"bash-completion"
	"shfmt"
	"tmux"
	"reattach-to-user-namespace"
	"git"
	"the_silver_searcher"
	"fzf"
	"vim"
	"docker"
	"heroku"
	"postgresql"
	"redis"
	"go"
	"dep"
	"python3"
	"ruby"
	"rbenv"
	"ruby-build"
	"node"
	"n"
	"yarn"
	"hugo"
	"exercism"
	"asciinema"
	"mas"
)
for homebrew_package in "${homebrew_packages[@]}"; do
	brew install "$homebrew_package"
done

echo "Installing unofficial global Homebrew packages"
unofficial_homebrew_packages=(
	"universal-ctags/universal-ctags/universal-ctags"
)
for unofficial_homebrew_package in "${unofficial_homebrew_packages[@]}"; do
	brew install --HEAD "$unofficial_homebrew_package"
done

echo "Installing Vim plugin manager"
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
	https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Installing Vim plugins"
vim +PlugInstall +qall

echo "Creating Vim history file directories"
mkdir ~/.vim/{backup_files,swap_files,undo_files}

echo "Installing global Go packages"
go_packages=(
	"github.com/golang/lint/golint"
)
for go_package in "${go_packages[@]}"; do
	go get "$go_package"
done

echo "Installing global Python packages"
python_packages=(
	"pipenv"
	"pylint"
	"yapf"
)
for python_package in "${python_packages[@]}"; do
	pip3 install "$python_package"
done

echo "Installing global Ruby packages"
ruby_packages=(
	"bundler"
	"foreman"
	"rubocop"
)
for ruby_package in "${ruby_packages[@]}"; do
	gem install "$ruby_package"
done

echo "Upgrading npm"
npm install npm@latest -g

echo "Adding npm user"
npm adduser

echo "Installing global node packages"
node_packages=(
	"eslint"
	"prettier"
)
for node_package in "${node_packages[@]}"; do
	npm install -g "$node_package"
done

echo "Configuring practice problems"
exercism configure
exercism configure --dir="/Users/trevordmiller/repos/practice-problems/exercism"

echo "Configuring terminal recording"
asciinema auth

# ==================================================================
# APPS / FONTS
# ==================================================================

echo "Installing Homebrew cask apps and fonts"
brew tap caskroom/fonts
homebrew_cask_packages=(
	"iterm2"
	"google-chrome"
	"anki"
	"spotify"
	"slack"
	"zoomus"
	"1password"
	"rescuetime"
	"font-fira-mono"
)
for homebrew_cask_package in "${homebrew_cask_packages[@]}"; do
	brew cask install "$homebrew_cask_package"
done

echo "Installing Mac App Store apps"
mac_app_store_apps=(
	"585829637" # Todoist
	"1055511498" # Day One
	"682658836" # GarageBand
)
for mac_app_store_app in "${mac_app_store_apps[@]}"; do
	mas install "$mac_app_store_app"
done

# ==================================================================
# MACOS
# ==================================================================

# KEYBOARD

echo "Configuring key repeat"
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 10

# HIDDEN FILES

echo "Configuring hidden files to show"
defaults write com.apple.finder AppleShowAllFiles YES
killall Finder

# MENU BAR

echo "Configuring menu bar to autohide"
defaults write NSGlobalDomain _HIHideMenuBar -bool true
killall Finder

# DOCK

echo "Configuring dock to autohide"
osascript <<EOD
  tell application "System Events"
    if (get autohide of dock preferences) is false then
      tell dock preferences to set autohide to not autohide
    end if
  end tell
EOD

# SCREENSHOTS

echo "Configuring screenshots to save in Downloads"
defaults write com.apple.screencapture location ~/Downloads
killall SystemUIServer

# CHROME

echo "Configuring incognito mode"
defaults write com.google.chrome IncognitoModeAvailability -integer 1

# ==================================================================
# MANUAL
# ==================================================================

cat <<EOF

Most importantly, my task list (Todoist) is the single source of truth linking to everything else. 

Most things are taken care of automatically with the set up script, but some manual items are needed:

- Install my ethernet adapter drivers from http://www.asix.com.tw/FrootAttach/driver/AX88179_178A_Macintosh_Driver_Installer_v2.9.0_20171011.zip
- Sync iTerm2 settings with $(com.googlecode.iterm2.plist) dotfile
- Text Message Forwarding (on, from iPhone)
- Remove all dock icons other than Todoist
- Delete unused factory Applications
- Remove notification center widgets
- General
  - Highlight color (Nova cyan)
- Keyboard
  - For each keyboard
    - Modifier keys caps lock (escape)
  - Touch bar (app controls)
- Users
  - Add avatar
  - Login items ($(RescueTime))
- Audio & video
  - Video input: webcam camera
  - Audio input: webcam mic
  - Audio output: DAC
- Desktop & Screen Saver
  - Add desktop background
- Finder
  - Favorites ($(trevordmiller) only)
  - Show all filename extensions (on)
  - Show warning before changing an extension (off)
  - Correct spelling automatically (off)
  - Remove items from the Trash after 30 days (on)
  - Keep folders on top when sorting by name (on)
- Face ID
  - Login (on)
  - Apple Pay (on)
- iCloud
  - Enable everything
- Notification Center
  - Do Not Disturb
    - Scheduled (on, from 11pm-7am)
    - When display is sleeping (on)
    - When mirroring to TVs and projectors (on)
    - Allow repeated calls (on)
    - Sort order (recents by app)
  - Turn off notifications for all apps that have email notifications
- Display
  - Night Shift
    - Scheduled (from sunset to sunrise)
    - Full warmth
- Sound
  - Alert sound (glass)
  - Alert volume (full)
- Sound
  - Show volume in menu bar (on)
- Todoist
  - Show in menu bar (off)
  - Show badge in dock icon (off)
- Calendar
  - Add "Personal" and "Work" accounts
  - Time to leave (on)
  - Show shared calendar messages in notification center (off)
- Chrome
  - Set as default browser
  - Add "personal" and "work" profiles, signed in to the related google account
    - Safe search (on, locked)
    - Extensions
      - Shared: Vimium
        - Vimium custom mappings
          - map <c-b> scrollFullPageUp
          - map <c-f> scrollFullPageDown
      - Personal: 1Password
        - Adblock Plus settings
          - Allow some non-intrusive advertising (off)
          - Show 'Block Element' right-click menu item (off)
          - Show 'Adblock Plus' panel in the developer tools (off)
      - Work: LastPass, React DevTools, Redux DevTools
      - Hide icons in Chrome menu
- WakaTime
  - Add API key to $(~/.wakatime.cfg)
- Exercism
  - Run $(exercism configure --key={apiKey}) from http://exercism.io/account/key
- Spotify
  - Sign in
  - Highest quality of streaming and downloads
  - Download playlists offline
- Screenflow
  - Enter licence
  - Remove recording countdown
  - Add audio driver for computer sound
- SwitchResX
  - Enter licence
  - Show only 1080p60 (HiDPI) and 720p60 (HiDPI) options
- Windows via Boot Camp Assistant
  - Official ISO file from Microsoft
    - 64 bit
    - English
  - 150gb partition
  - Version: Windows 10 Home
  - Skip registration key
  - Enhance pointer precision (off)
  - Download Blizzard.net app
  - 1000 mouse DPI
  - Overwatch
    - Music Volume (off)
    - Mouse sensitivity (4.5 for 4500 eDPI)
    - Allied health bars (on)
- Set Startup Disk to macOS

Then, restart desktop.

# Mobile setup (iPhone)

- Turn hardware silent toggle switch on
- Settings
  - Sign in with Apple ID
  - Add Face ID
  - Set background pictures
  - Text message forwarding to desktop
  - Send as SMS when iMessage is unavailable
  - Don't store passwords in Safari
  - Restrictions (on), explicit (off), movies (PG-13), TV Shows (TV-14), explicit Language (off), websites (Limit Adult Content)
  - Cellular turn off large media apps
  - Do Not Disturb scheduled
  - Do Not Disturb automatically while driving
  - Night Shift scheduled with full warmth
  - Turn off keyboard auto capitalization and auto spelling correction
  - Turn off notifications for all apps that have email notifications
- Remove widgets
- Remove unused stock apps
- Download and configure 1Password
  - Add vault
  - Allow unlock with Face ID
  - Show in Safari share
- Homescreen
  - Todoist
    - The only app in the dock
  - Calendar
    - Add "personal" and "work" accounts
  - Messages
  - Phone
  - Anki
    - Sign in
  - Feedly
    - Sign in
  - Gospel Library
    - Sign in
  - Camera
  - Spotify
    - Sign in
    - Highest quality of streaming and downloads
    - Download playlists offline
  - Maps
- background/ folder on second screen
  - 1Password
    - Already done ^
  - Contacts
    - Special sound/vibrate pattern for Amy
    - Emergency bypass call and text for Amy
  - Clock
    - Weekday alarm
    - Weekend alarm
  - Photos
  - Find iPhone
    - Turn on Send Last Location
  - Health
    - Set up profile and medical ID
  - Wallet
    - Add debit card for Apple Pay
  - Google Docs
  - Safari
    - Google safe search
  - App Store
  - Settings
    - Already done ^

# Keyboard setup (Poker 3)

- Defaults

# Router setup

- OpenDNS Family Shield
  - Open router preferences at http://192.168.0.1
  - Select Advanced Setup
  - Select WAN settings
  - Change DNS type to static DNS
  - Add FamilyShield OpenDNS server addresses as DNS server settings and save
    - Primary DNS: 208.67.222.123
    - Secondary DNS: 208.67.220.123
  - Repeat for IPv6 WAN settings
  - Check it is working at https://welcome.opendns.com and http://www.internetbadguys.com

EOF
